diff -up pegasus/src/Pegasus/Common/SCMOStreamer.cpp.orig pegasus/src/Pegasus/Common/SCMOStreamer.cpp
--- pegasus/src/Pegasus/Common/SCMOStreamer.cpp.orig	2014-01-22 10:33:57.334122409 +0100
+++ pegasus/src/Pegasus/Common/SCMOStreamer.cpp	2014-01-22 12:45:24.296911430 +0100
@@ -457,24 +457,6 @@ bool SCMOStreamer::_getInstances()
 
         SCMOInstance* scmoInstPtr = new SCMOInstance(scmbInstPtr);
 
-        if (numExtRefs > 0)
-        {
-            // Handle the external references to other SCMOInstances
-            Uint32 numExtRefs = scmoInstPtr->numberExtRef();
-            for (Uint32 i=0; i < numExtRefs; i++)
-            {
-                Uint32 extRefPos = extRefArray[extRefIndex].index;
-                SCMOInstance* extRefPtr =
-                    (SCMOInstance*)instArray[extRefPos].scmbptr;
-                scmoInstPtr->putExtRef(i,extRefPtr);
-
-                // Mark instance as already consumed
-                instArray[extRefPos].scmbptr = 0;
-
-                extRefIndex++;
-            }
-        }
-
         instArray[x].scmbptr = (Uint64)(void*)scmoInstPtr;
 
 #ifdef PEGASUS_DEBUG
@@ -482,6 +464,32 @@ bool SCMOStreamer::_getInstances()
 #endif
     }
 
+    // resolve all references in all instances
+    if (numExtRefs > 0)
+    {
+        for (Uint32 x = 0; x < numInst; x++)
+        {
+            SCMOInstance* inst = (SCMOInstance*)instArray[x].scmbptr;
+            // resolve all references in this instance
+            for (Uint32 ref = 0; ref < inst->numberExtRef(); ref++)
+            {
+                Uint64 oldPtr = (Uint64)(void*)inst->getExtRef(ref);
+                /* find the instance for given reference*/
+                for (Uint32 y = 0; y < numExtRefs; y++)
+                {
+                    if (extRefArray[y].scmbptr == oldPtr) {
+                        Uint64 index = extRefArray[y].index;
+                        SCMOInstance *newPtr = (SCMOInstance*) instArray[index].scmbptr;
+                        inst->putExtRef(ref, newPtr);
+                        // consume the instance
+                        instArray[index].scmbptr = 0;
+                        break;
+                    }
+                }
+            }
+        }
+    }
+
     // Append all non-referenced instances to output array
     for (Uint32 x=0; x < numInst; x++)
     {
